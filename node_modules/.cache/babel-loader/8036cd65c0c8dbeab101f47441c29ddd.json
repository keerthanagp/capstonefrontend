{"ast":null,"code":"/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes =\n/** @type {const} */\n{\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9,\n  // `\\t`\n  lf: 10,\n  // `\\n`\n  vt: 11,\n  // `\\v`\n  ff: 12,\n  // `\\f`\n  cr: 13,\n  // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33,\n  // `!`\n  quotationMark: 34,\n  // `\"`\n  numberSign: 35,\n  // `#`\n  dollarSign: 36,\n  // `$`\n  percentSign: 37,\n  // `%`\n  ampersand: 38,\n  // `&`\n  apostrophe: 39,\n  // `'`\n  leftParenthesis: 40,\n  // `(`\n  rightParenthesis: 41,\n  // `)`\n  asterisk: 42,\n  // `*`\n  plusSign: 43,\n  // `+`\n  comma: 44,\n  // `,`\n  dash: 45,\n  // `-`\n  dot: 46,\n  // `.`\n  slash: 47,\n  // `/`\n  digit0: 48,\n  // `0`\n  digit1: 49,\n  // `1`\n  digit2: 50,\n  // `2`\n  digit3: 51,\n  // `3`\n  digit4: 52,\n  // `4`\n  digit5: 53,\n  // `5`\n  digit6: 54,\n  // `6`\n  digit7: 55,\n  // `7`\n  digit8: 56,\n  // `8`\n  digit9: 57,\n  // `9`\n  colon: 58,\n  // `:`\n  semicolon: 59,\n  // `;`\n  lessThan: 60,\n  // `<`\n  equalsTo: 61,\n  // `=`\n  greaterThan: 62,\n  // `>`\n  questionMark: 63,\n  // `?`\n  atSign: 64,\n  // `@`\n  uppercaseA: 65,\n  // `A`\n  uppercaseB: 66,\n  // `B`\n  uppercaseC: 67,\n  // `C`\n  uppercaseD: 68,\n  // `D`\n  uppercaseE: 69,\n  // `E`\n  uppercaseF: 70,\n  // `F`\n  uppercaseG: 71,\n  // `G`\n  uppercaseH: 72,\n  // `H`\n  uppercaseI: 73,\n  // `I`\n  uppercaseJ: 74,\n  // `J`\n  uppercaseK: 75,\n  // `K`\n  uppercaseL: 76,\n  // `L`\n  uppercaseM: 77,\n  // `M`\n  uppercaseN: 78,\n  // `N`\n  uppercaseO: 79,\n  // `O`\n  uppercaseP: 80,\n  // `P`\n  uppercaseQ: 81,\n  // `Q`\n  uppercaseR: 82,\n  // `R`\n  uppercaseS: 83,\n  // `S`\n  uppercaseT: 84,\n  // `T`\n  uppercaseU: 85,\n  // `U`\n  uppercaseV: 86,\n  // `V`\n  uppercaseW: 87,\n  // `W`\n  uppercaseX: 88,\n  // `X`\n  uppercaseY: 89,\n  // `Y`\n  uppercaseZ: 90,\n  // `Z`\n  leftSquareBracket: 91,\n  // `[`\n  backslash: 92,\n  // `\\`\n  rightSquareBracket: 93,\n  // `]`\n  caret: 94,\n  // `^`\n  underscore: 95,\n  // `_`\n  graveAccent: 96,\n  // `` ` ``\n  lowercaseA: 97,\n  // `a`\n  lowercaseB: 98,\n  // `b`\n  lowercaseC: 99,\n  // `c`\n  lowercaseD: 100,\n  // `d`\n  lowercaseE: 101,\n  // `e`\n  lowercaseF: 102,\n  // `f`\n  lowercaseG: 103,\n  // `g`\n  lowercaseH: 104,\n  // `h`\n  lowercaseI: 105,\n  // `i`\n  lowercaseJ: 106,\n  // `j`\n  lowercaseK: 107,\n  // `k`\n  lowercaseL: 108,\n  // `l`\n  lowercaseM: 109,\n  // `m`\n  lowercaseN: 110,\n  // `n`\n  lowercaseO: 111,\n  // `o`\n  lowercaseP: 112,\n  // `p`\n  lowercaseQ: 113,\n  // `q`\n  lowercaseR: 114,\n  // `r`\n  lowercaseS: 115,\n  // `s`\n  lowercaseT: 116,\n  // `t`\n  lowercaseU: 117,\n  // `u`\n  lowercaseV: 118,\n  // `v`\n  lowercaseW: 119,\n  // `w`\n  lowercaseX: 120,\n  // `x`\n  lowercaseY: 121,\n  // `y`\n  lowercaseZ: 122,\n  // `z`\n  leftCurlyBrace: 123,\n  // `{`\n  verticalBar: 124,\n  // `|`\n  rightCurlyBrace: 125,\n  // `}`\n  tilde: 126,\n  // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n\n};","map":{"version":3,"sources":["D:/com lab/react/keerthana/auth2/AuthInMern/client/node_modules/micromark-util-symbol/codes.js"],"names":["codes","carriageReturn","lineFeed","carriageReturnLineFeed","horizontalTab","virtualSpace","eof","nul","soh","stx","etx","eot","enq","ack","bel","bs","ht","lf","vt","ff","cr","so","si","dle","dc1","dc2","dc3","dc4","nak","syn","etb","can","em","sub","esc","fs","gs","rs","us","space","exclamationMark","quotationMark","numberSign","dollarSign","percentSign","ampersand","apostrophe","leftParenthesis","rightParenthesis","asterisk","plusSign","comma","dash","dot","slash","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","colon","semicolon","lessThan","equalsTo","greaterThan","questionMark","atSign","uppercaseA","uppercaseB","uppercaseC","uppercaseD","uppercaseE","uppercaseF","uppercaseG","uppercaseH","uppercaseI","uppercaseJ","uppercaseK","uppercaseL","uppercaseM","uppercaseN","uppercaseO","uppercaseP","uppercaseQ","uppercaseR","uppercaseS","uppercaseT","uppercaseU","uppercaseV","uppercaseW","uppercaseX","uppercaseY","uppercaseZ","leftSquareBracket","backslash","rightSquareBracket","caret","underscore","graveAccent","lowercaseA","lowercaseB","lowercaseC","lowercaseD","lowercaseE","lowercaseF","lowercaseG","lowercaseH","lowercaseI","lowercaseJ","lowercaseK","lowercaseL","lowercaseM","lowercaseN","lowercaseO","lowercaseP","lowercaseQ","lowercaseR","lowercaseS","lowercaseT","lowercaseU","lowercaseV","lowercaseW","lowercaseX","lowercaseY","lowercaseZ","leftCurlyBrace","verticalBar","rightCurlyBrace","tilde","del","byteOrderMarker","replacementCharacter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,KAAK;AAAG;AAAsB;AACzCC,EAAAA,cAAc,EAAE,CAAC,CADwB;AAEzCC,EAAAA,QAAQ,EAAE,CAAC,CAF8B;AAGzCC,EAAAA,sBAAsB,EAAE,CAAC,CAHgB;AAIzCC,EAAAA,aAAa,EAAE,CAAC,CAJyB;AAKzCC,EAAAA,YAAY,EAAE,CAAC,CAL0B;AAMzCC,EAAAA,GAAG,EAAE,IANoC;AAOzCC,EAAAA,GAAG,EAAE,CAPoC;AAQzCC,EAAAA,GAAG,EAAE,CARoC;AASzCC,EAAAA,GAAG,EAAE,CAToC;AAUzCC,EAAAA,GAAG,EAAE,CAVoC;AAWzCC,EAAAA,GAAG,EAAE,CAXoC;AAYzCC,EAAAA,GAAG,EAAE,CAZoC;AAazCC,EAAAA,GAAG,EAAE,CAboC;AAczCC,EAAAA,GAAG,EAAE,CAdoC;AAezCC,EAAAA,EAAE,EAAE,CAfqC;AAgBzCC,EAAAA,EAAE,EAAE,CAhBqC;AAgBlC;AACPC,EAAAA,EAAE,EAAE,EAjBqC;AAiBjC;AACRC,EAAAA,EAAE,EAAE,EAlBqC;AAkBjC;AACRC,EAAAA,EAAE,EAAE,EAnBqC;AAmBjC;AACRC,EAAAA,EAAE,EAAE,EApBqC;AAoBjC;AACRC,EAAAA,EAAE,EAAE,EArBqC;AAsBzCC,EAAAA,EAAE,EAAE,EAtBqC;AAuBzCC,EAAAA,GAAG,EAAE,EAvBoC;AAwBzCC,EAAAA,GAAG,EAAE,EAxBoC;AAyBzCC,EAAAA,GAAG,EAAE,EAzBoC;AA0BzCC,EAAAA,GAAG,EAAE,EA1BoC;AA2BzCC,EAAAA,GAAG,EAAE,EA3BoC;AA4BzCC,EAAAA,GAAG,EAAE,EA5BoC;AA6BzCC,EAAAA,GAAG,EAAE,EA7BoC;AA8BzCC,EAAAA,GAAG,EAAE,EA9BoC;AA+BzCC,EAAAA,GAAG,EAAE,EA/BoC;AAgCzCC,EAAAA,EAAE,EAAE,EAhCqC;AAiCzCC,EAAAA,GAAG,EAAE,EAjCoC;AAkCzCC,EAAAA,GAAG,EAAE,EAlCoC;AAmCzCC,EAAAA,EAAE,EAAE,EAnCqC;AAoCzCC,EAAAA,EAAE,EAAE,EApCqC;AAqCzCC,EAAAA,EAAE,EAAE,EArCqC;AAsCzCC,EAAAA,EAAE,EAAE,EAtCqC;AAuCzCC,EAAAA,KAAK,EAAE,EAvCkC;AAwCzCC,EAAAA,eAAe,EAAE,EAxCwB;AAwCpB;AACrBC,EAAAA,aAAa,EAAE,EAzC0B;AAyCtB;AACnBC,EAAAA,UAAU,EAAE,EA1C6B;AA0CzB;AAChBC,EAAAA,UAAU,EAAE,EA3C6B;AA2CzB;AAChBC,EAAAA,WAAW,EAAE,EA5C4B;AA4CxB;AACjBC,EAAAA,SAAS,EAAE,EA7C8B;AA6C1B;AACfC,EAAAA,UAAU,EAAE,EA9C6B;AA8CzB;AAChBC,EAAAA,eAAe,EAAE,EA/CwB;AA+CpB;AACrBC,EAAAA,gBAAgB,EAAE,EAhDuB;AAgDnB;AACtBC,EAAAA,QAAQ,EAAE,EAjD+B;AAiD3B;AACdC,EAAAA,QAAQ,EAAE,EAlD+B;AAkD3B;AACdC,EAAAA,KAAK,EAAE,EAnDkC;AAmD9B;AACXC,EAAAA,IAAI,EAAE,EApDmC;AAoD/B;AACVC,EAAAA,GAAG,EAAE,EArDoC;AAqDhC;AACTC,EAAAA,KAAK,EAAE,EAtDkC;AAsD9B;AACXC,EAAAA,MAAM,EAAE,EAvDiC;AAuD7B;AACZC,EAAAA,MAAM,EAAE,EAxDiC;AAwD7B;AACZC,EAAAA,MAAM,EAAE,EAzDiC;AAyD7B;AACZC,EAAAA,MAAM,EAAE,EA1DiC;AA0D7B;AACZC,EAAAA,MAAM,EAAE,EA3DiC;AA2D7B;AACZC,EAAAA,MAAM,EAAE,EA5DiC;AA4D7B;AACZC,EAAAA,MAAM,EAAE,EA7DiC;AA6D7B;AACZC,EAAAA,MAAM,EAAE,EA9DiC;AA8D7B;AACZC,EAAAA,MAAM,EAAE,EA/DiC;AA+D7B;AACZC,EAAAA,MAAM,EAAE,EAhEiC;AAgE7B;AACZC,EAAAA,KAAK,EAAE,EAjEkC;AAiE9B;AACXC,EAAAA,SAAS,EAAE,EAlE8B;AAkE1B;AACfC,EAAAA,QAAQ,EAAE,EAnE+B;AAmE3B;AACdC,EAAAA,QAAQ,EAAE,EApE+B;AAoE3B;AACdC,EAAAA,WAAW,EAAE,EArE4B;AAqExB;AACjBC,EAAAA,YAAY,EAAE,EAtE2B;AAsEvB;AAClBC,EAAAA,MAAM,EAAE,EAvEiC;AAuE7B;AACZC,EAAAA,UAAU,EAAE,EAxE6B;AAwEzB;AAChBC,EAAAA,UAAU,EAAE,EAzE6B;AAyEzB;AAChBC,EAAAA,UAAU,EAAE,EA1E6B;AA0EzB;AAChBC,EAAAA,UAAU,EAAE,EA3E6B;AA2EzB;AAChBC,EAAAA,UAAU,EAAE,EA5E6B;AA4EzB;AAChBC,EAAAA,UAAU,EAAE,EA7E6B;AA6EzB;AAChBC,EAAAA,UAAU,EAAE,EA9E6B;AA8EzB;AAChBC,EAAAA,UAAU,EAAE,EA/E6B;AA+EzB;AAChBC,EAAAA,UAAU,EAAE,EAhF6B;AAgFzB;AAChBC,EAAAA,UAAU,EAAE,EAjF6B;AAiFzB;AAChBC,EAAAA,UAAU,EAAE,EAlF6B;AAkFzB;AAChBC,EAAAA,UAAU,EAAE,EAnF6B;AAmFzB;AAChBC,EAAAA,UAAU,EAAE,EApF6B;AAoFzB;AAChBC,EAAAA,UAAU,EAAE,EArF6B;AAqFzB;AAChBC,EAAAA,UAAU,EAAE,EAtF6B;AAsFzB;AAChBC,EAAAA,UAAU,EAAE,EAvF6B;AAuFzB;AAChBC,EAAAA,UAAU,EAAE,EAxF6B;AAwFzB;AAChBC,EAAAA,UAAU,EAAE,EAzF6B;AAyFzB;AAChBC,EAAAA,UAAU,EAAE,EA1F6B;AA0FzB;AAChBC,EAAAA,UAAU,EAAE,EA3F6B;AA2FzB;AAChBC,EAAAA,UAAU,EAAE,EA5F6B;AA4FzB;AAChBC,EAAAA,UAAU,EAAE,EA7F6B;AA6FzB;AAChBC,EAAAA,UAAU,EAAE,EA9F6B;AA8FzB;AAChBC,EAAAA,UAAU,EAAE,EA/F6B;AA+FzB;AAChBC,EAAAA,UAAU,EAAE,EAhG6B;AAgGzB;AAChBC,EAAAA,UAAU,EAAE,EAjG6B;AAiGzB;AAChBC,EAAAA,iBAAiB,EAAE,EAlGsB;AAkGlB;AACvBC,EAAAA,SAAS,EAAE,EAnG8B;AAmG1B;AACfC,EAAAA,kBAAkB,EAAE,EApGqB;AAoGjB;AACxBC,EAAAA,KAAK,EAAE,EArGkC;AAqG9B;AACXC,EAAAA,UAAU,EAAE,EAtG6B;AAsGzB;AAChBC,EAAAA,WAAW,EAAE,EAvG4B;AAuGxB;AACjBC,EAAAA,UAAU,EAAE,EAxG6B;AAwGzB;AAChBC,EAAAA,UAAU,EAAE,EAzG6B;AAyGzB;AAChBC,EAAAA,UAAU,EAAE,EA1G6B;AA0GzB;AAChBC,EAAAA,UAAU,EAAE,GA3G6B;AA2GxB;AACjBC,EAAAA,UAAU,EAAE,GA5G6B;AA4GxB;AACjBC,EAAAA,UAAU,EAAE,GA7G6B;AA6GxB;AACjBC,EAAAA,UAAU,EAAE,GA9G6B;AA8GxB;AACjBC,EAAAA,UAAU,EAAE,GA/G6B;AA+GxB;AACjBC,EAAAA,UAAU,EAAE,GAhH6B;AAgHxB;AACjBC,EAAAA,UAAU,EAAE,GAjH6B;AAiHxB;AACjBC,EAAAA,UAAU,EAAE,GAlH6B;AAkHxB;AACjBC,EAAAA,UAAU,EAAE,GAnH6B;AAmHxB;AACjBC,EAAAA,UAAU,EAAE,GApH6B;AAoHxB;AACjBC,EAAAA,UAAU,EAAE,GArH6B;AAqHxB;AACjBC,EAAAA,UAAU,EAAE,GAtH6B;AAsHxB;AACjBC,EAAAA,UAAU,EAAE,GAvH6B;AAuHxB;AACjBC,EAAAA,UAAU,EAAE,GAxH6B;AAwHxB;AACjBC,EAAAA,UAAU,EAAE,GAzH6B;AAyHxB;AACjBC,EAAAA,UAAU,EAAE,GA1H6B;AA0HxB;AACjBC,EAAAA,UAAU,EAAE,GA3H6B;AA2HxB;AACjBC,EAAAA,UAAU,EAAE,GA5H6B;AA4HxB;AACjBC,EAAAA,UAAU,EAAE,GA7H6B;AA6HxB;AACjBC,EAAAA,UAAU,EAAE,GA9H6B;AA8HxB;AACjBC,EAAAA,UAAU,EAAE,GA/H6B;AA+HxB;AACjBC,EAAAA,UAAU,EAAE,GAhI6B;AAgIxB;AACjBC,EAAAA,UAAU,EAAE,GAjI6B;AAiIxB;AACjBC,EAAAA,cAAc,EAAE,GAlIyB;AAkIpB;AACrBC,EAAAA,WAAW,EAAE,GAnI4B;AAmIvB;AAClBC,EAAAA,eAAe,EAAE,GApIwB;AAoInB;AACtBC,EAAAA,KAAK,EAAE,GArIkC;AAqI7B;AACZC,EAAAA,GAAG,EAAE,GAtIoC;AAuIzC;AACAC,EAAAA,eAAe,EAAE,KAxIwB;AAyIzC;AACAC,EAAAA,oBAAoB,EAAE,KA1ImB,CA0Ib;;AA1Ia,CAApC","sourcesContent":["/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n})\n"]},"metadata":{},"sourceType":"module"}